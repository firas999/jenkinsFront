
pipeline {
    agent any
     stages{
          stage ('Install dependency') {
           steps{
                      script{
  
        bat 'npm install'
    }
    }
    } 
   
    
    stage('Sonar Scanner Coverage') {
        try{
           steps{
                      script{
       withSonarQubeEnv('SonarScanner') { 
        bat "npm run sonar"
       }
        timeout(time: 1, unit: 'HOURS') {
			      def qg = waitForQualityGate()
				      if (qg.status != 'OK') {
					   error "Pipeline aborted due to quality gate failure: ${qg.status}"
				      }
                    		}
		    	    bat 'echo echo tested succesfully'
    }
           }
           }catch(err){
             mail bcc: '', body: '${err}', cc: '', from: '', replyTo: '', subject: 'Build failed', to: 'firas.mhalla@advyteam.com'
   
           }
    }
      

                 stage('build && test succed  email notification')	{
                     mail bcc: '', body: 'Your image application is ready', cc: '', from: '', replyTo: '', subject: 'Build succed', to: 'firas.mhalla@advyteam.com'
   
                 }


   
}
}