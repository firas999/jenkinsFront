
pipeline {
    agent any
     stages{
          stage ('Install dependency') {
           steps{
                      script{
  
        bat 'npm install'
    }
    }
    } 
   
    
    stage('Sonar Scanner Coverage') {
           steps{
                      script{
       withSonarQubeEnv('SonarScanner') { 
        bat "npm run sonar"
       }
        timeout(time: 1, unit: 'HOURS') {
			      def qg = waitForQualityGate()
				      if (qg.status != 'OK') {
                        stage('Email test-fail notification '){
                            mail bcc: '', body: 'Your sonarQube test has failed ', cc: '', from: '', replyTo: '', subject: 'Test failed', to: 'firas.mhalla@advyteam.com'

                        }
					   error "Pipeline aborted due to quality gate failure: ${qg.status}"
				      }
                    		}
		    	    bat 'echo echo tested succesfully'
    }
           }
           }
       stage('build')
                {
              steps{
                  script{
                  bat 'docker build C:/Users/dell/.jenkins/workspace/AngularPipeline -t 123anz/jenkins:FrontEndImage'
		  withCredentials([string(credentialsId: 'dockerPASS', variable: 'docker_password')]) {			    
				  bat 'docker login -u 123anz -p ~$cd,)Vcs,-4h=Q'
				  bat 'docker push 123anz/jenkins:FrontEndImage'
			}
                       }
                    }
                 }	
   
}
}