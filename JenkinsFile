
pipeline {
    agent any
     stages{
          stage ('Install dependency') {
           steps{
                      script{
  
        bat 'npm install'
    }
    }
    } 
   
    
    stage('Sonar Scanner Coverage') {
           steps{
                      script{
       withSonarQubeEnv('SonarScanner') { 
       // bat "npm run sonar"
       }
        timeout(time: 1, unit: 'HOURS') {
			      def qg = waitForQualityGate()
				      if (qg.status == 'OK') {
                         mail bcc: '', attachlog: true,body: "${currentBuild.result} :  ${BUILD_URL}", cc: '', from: '', replyTo: '', subject: "Build Notification: ${env.JOB_BASE_NAME}-Build# ${BUILD_NUMBER} ${currentBuild.result}", to: 'firas.mhalla@advyteam.com'
   
					   error "Pipeline aborted due to quality gate failure: ${qg.status}"
				      }
                    		}
		    	    bat 'echo echo tested succesfully'
    }
           }
           }
    

                    stage('build && test succed  email notification')	{
                        steps{
                     mail bcc: '', body: ' Your image application is ready', cc: '', from: '', replyTo: '', subject: " - Build N# ${BUILD_NUMBER}-  Successfull", to: 'firas.mhalla@advyteam.com'
                    }
                 }
   
}
}